
		// data layers
        var layers = {};
<%	if(is.na(center) && is.na(zoom)) { -%>
        var group = new L.featureGroup;
<%	} -%>
		function addDataToMap(data, style, layer) {
<%	if(all(!is.na(style))) {
		if(any(style=="marker")) { -%>
			if(style == "marker") {
				layers[layer] = L.geoJson(data, {
					onEachFeature: (typeof onEachFeature == "undefined") ? undefined : onEachFeature,
					pointToLayer: function (feature, latlng) {return L.marker(latlng);}
				});
			} else {
				layers[layer] = L.geoJson(data, {
					onEachFeature: (typeof onEachFeature == "undefined") ? undefined : onEachFeature,
					pointToLayer: function (feature, latlng) {return L.circleMarker(latlng);},
					style: style
				});
			}
<%		} else { -%>
			layers[layer] = L.geoJson(data, {
				onEachFeature: (typeof onEachFeature == "undefined") ? undefined : onEachFeature,
				pointToLayer: function (feature, latlng) {return L.circleMarker(latlng);},
				style: style
			});
<%		}
	} else { -%>
			layers[layer] = L.geoJson(data, {
				onEachFeature: (typeof onEachFeature == "undefined") ? undefined : onEachFeature,
				pointToLayer: function (feature, latlng) {return L.circleMarker(latlng);},
				style: style
			});
<%	} -%>
			layers[layer].addTo(map);	
<%	if(is.na(center) && is.na(zoom)) { -%>
        	group.addLayer(layers[layer])
			map.fitBounds(group.getBounds());
<%	} -%>
		};
		
<%	for(n in 1:length(data)) {
		layer.name <- names(data)[n]
		if(!is.null(layer.name)) layer.name <- gsub("[_.]", " ", layer.name)
		if(is.null(layer.name)) layer.name <- gsub("_", " ", paste(head(strsplit(basename(data[[n]]), "[.]")[[1]], -1), collapse="_"))
		else if(layer.name=="") layer.name <- gsub("_", " ", paste(head(strsplit(basename(data[[n]]), "[.]")[[1]], -1), collapse="_"))
-%>
		if(typeof style<%= n %> == "undefined") style<%= n %> = undefined;
<%		if(incl.data) {	
			if(!file.exists(data[[n]])) stop("data file not found")
			con <- file(data[[n]], "rt") 
			lns <- readLines(con) 
			close(con) -%>
<%			if(topojson[n]) { -%>
<%				obj <- getTopologies(json[[n]], FALSE) -%>
<%				if(length(obj)>1) warning("TopoJSON file contains more than one topology objects - only first object is used", call.=FALSE) -%>
		dat<%= n %> = <%= paste(lns, collapse="\n\t\t") %>
		addDataToMap(topojson.feature(dat<%= n %>, dat<%= n %>.objects.<%= obj[1] %>), style<%= n %>, "<%= layer.name %>")
<%			} else { -%>
		addDataToMap(<%= paste(lns, collapse="\n\t\t") %>, style<%= n %>, "<%= layer.name %>");
<%			} -%>
<%		} else { -%>
<%			if(topojson[n]) { -%>
<%				obj <- getTopologies(json[[n]], FALSE) -%>
<%				if(length(obj)>1) warning("TopoJSON file contains more than one topology objects - only first object is used", call.=FALSE) -%>
		$.getJSON($("link[rel='dat<%= n %>']").attr("href"), function(x) {addDataToMap(topojson.feature(x, x.objects.<%= obj[1] %>), style<%= n %>, "<%= layer.name %>")});
<%			} else { -%>
		$.getJSON($("link[rel='dat<%= n %>']").attr("href"), function(x) {addDataToMap(x, style<%= n %>, "<%= layer.name %>")});
<%			} -%>
<%		} -%>
<%	} -%>
