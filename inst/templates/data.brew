
		// data layers
		var layers = {};
<%	if(is.na(center) && is.na(zoom)) { -%>
		var group = new L.featureGroup;
<%	} -%>
		function addDataToMap(data, style, label, layer, lc) {
<%	if(any(!is.na(style))) {
		marker <- FALSE
		if(any(class(style)=="list")) {
			for(n in 1:length(style)) if(any(!is.na(style[[n]]))) if(!is.null(attr(style[[n]], "marker"))) marker <- TRUE
		} else {
			if(!is.null(attr(style, "marker"))) marker <- TRUE
		}
		if(marker) { -%>
			if("options" in style) {
				layers[layer] = L.geoJson(data, {
					onEachFeature: (typeof onEachFeature == "undefined") ? undefined : onEachFeature,
					pointToLayer: (typeof label == "undefined") ? (function (feature, latlng) {return L.marker(latlng, {icon: style});}) : (function (feature, latlng) {return L.marker(latlng, {icon: style}).bindLabel(feature.properties[label], {direction: 'right'});})
				});
			} else {
				layers[layer] = L.geoJson(data, {
					onEachFeature: (typeof onEachFeature == "undefined") ? undefined : onEachFeature,
					pointToLayer: (typeof label == "undefined") ? (function (feature, latlng) {return L.circleMarker(latlng);}) : (function (feature, latlng) {return L.circleMarker(latlng).bindLabel(feature.properties[label], {direction: 'right'});}),
					style: style
				});
			}
<%		} else { -%>
			layers[layer] = L.geoJson(data, {
				onEachFeature: (typeof onEachFeature == "undefined") ? undefined : onEachFeature,
				pointToLayer: (typeof label == "undefined") ? (function (feature, latlng) {return L.circleMarker(latlng);}) : (function (feature, latlng) {return L.circleMarker(latlng).bindLabel(feature.properties[label], {direction: 'right'});}),
				style: style
			});
<%		}
	} else { -%>
			layers[layer] = L.geoJson(data, {
				onEachFeature: (typeof onEachFeature == "undefined") ? undefined : onEachFeature,
				pointToLayer: (typeof label == "undefined") ? (function (feature, latlng) {return L.circleMarker(latlng);}) : (function (feature, latlng) {return L.circleMarker(latlng).bindLabel(feature.properties[label], {direction: 'right'});}),
				style: style
			});
<%	} -%>
			layers[layer].addTo(map);	
<%	if(is.na(center) && is.na(zoom)) { -%>
			group.addLayer(layers[layer])
			map.fitBounds(group.getBounds());
<%	}
		if(layer.ctrl) { 
			brew(system.file("templates/layer.brew", package = "leafletR")) 
		} -%>
		};
		
<%	for(n in 1:length(data)) {
			layer.name <- names(data)[n]
			if(!is.null(layer.name)) layer.name <- gsub("[_.]", " ", layer.name)
			if(is.null(layer.name)) layer.name <- gsub("_", " ", paste(head(strsplit(basename(data[[n]]), "[.]")[[1]], -1), collapse="_"))
			else if(layer.name=="") layer.name <- gsub("_", " ", paste(head(strsplit(basename(data[[n]]), "[.]")[[1]], -1), collapse="_")) -%>
		if(typeof style<%= n %> == "undefined") style<%= n %> = undefined;
		if(typeof label<%= n %> == "undefined") label<%= n %> = undefined;
<%		if(incl.data) {	
				if(!file.exists(data[[n]])) stop("data file not found")
				con <- file(data[[n]], "rt") 
				lns <- readLines(con) 
				close(con)
				if(topojson[n]) {
					obj <- getTopologies(json[[n]], FALSE)
					if(length(obj)>1) warning("TopoJSON file contains more than one topology objects - only first object is used", call.=FALSE) -%>
		dat<%= n %> = <%= paste(lns, collapse="\n\t\t") %>
		addDataToMap(topojson.feature(dat<%= n %>, dat<%= n %>.objects.<%= obj[1] %>), style<%= n %>, label<%= n %>, "<%= layer.name %>")
<%  		} else if(layer.ctrl && n == length(data)) { -%>
    addDataToMap(<%= paste(lns, collapse="\n\t\t") %>, style<%= n %>, label<%= n %>, "<%= layer.name %>", "add");
<%			} else { -%>
		addDataToMap(<%= paste(lns, collapse="\n\t\t") %>, style<%= n %>, label<%= n %>, "<%= layer.name %>");
<%			}
			} else {
				if(topojson[n]) {
					obj <- getTopologies(json[[n]], FALSE)
					if(length(obj)>1) warning("TopoJSON file contains more than one topology objects - only first object is used", call.=FALSE) -%>
		$.getJSON($("link[rel='dat<%= n %>']").attr("href"), function(x) {addDataToMap(topojson.feature(x, x.objects.<%= obj[1] %>), style<%= n %>, label<%= n %>, "<%= layer.name %>")});
<%			} else if(layer.ctrl && n == length(data)) { -%>
		$.getJSON($("link[rel='dat<%= n %>']").attr("href"), function(x) {addDataToMap(x, style<%= n %>, label<%= n %>, "<%= layer.name %>", "add")});
<%    	} else { -%>
		$.getJSON($("link[rel='dat<%= n %>']").attr("href"), function(x) {addDataToMap(x, style<%= n %>, label<%= n %>, "<%= layer.name %>")});
<%			}
			}
		} -%>
